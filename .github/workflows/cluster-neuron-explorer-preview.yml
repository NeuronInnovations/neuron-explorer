# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Deploy to PREVIEW using live DB (cluster neuron-explorer)

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: neuron-explorer
  GKE_ZONE: us-central1-a

jobs:
  setup-build-publish-deploy:
    name: Deploy a test to neuron-exploer cluster
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    #Run test env
    - name: Show env
      run: env
    #Run shell test
    - name: Set selected color
      run: echo "::set-output name=DATE_TIME::$(date +'%Y%m%d-%H%M')"
      id: random-color-generator
    - name: Get color
      run: echo "The selected color is ${{ steps.random-color-generator.outputs.DATE_TIME }}"  
    - name: GET Actor
      run: echo "The GH actor is ${GITHUB_ACTOR:0:3}"
    
    # Build the Docker image
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven and Quarkus
      #run: mvn clean install
      run: mvn -D"revision"="1.0.0-SNAPSHOT-PREVIEW" clean install -Dquarkus.profile=kubernetes-preview

      # TODO: use the below, but it will need to re-deploy the app (delete deployment, because  1.0.0-SNAPSHOT-PROD is an inmutable requirement)
      #run: mvn -D"revision"="CLUSTER-${{env.GKE_CLUSTER}}-USR-${GITHUB_ACTOR:0:3}" clean install -Dquarkus.profile=kubernetes